{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { SelecionarContext } from \"../Selecionar\";\nimport { TarefasContext } from '../Tarefas';\nexport const useCronometro = () => {\n  _s();\n  const {\n    selecionar,\n    setSelecionar\n  } = useContext(SelecionarContext);\n  const {\n    setTarefas\n  } = useContext(TarefasContext);\n  const [$horas, $minutos, $segundos] = selecionar.time.split(':');\n  const horas = parseInt($horas);\n  const minutos = parseInt($minutos);\n  const segundos = parseInt($segundos);\n  function temposegundos() {\n    const tempo = horas * 3600 + minutos * 60 + segundos;\n    return tempo;\n  }\n  function cronometrar() {\n    let tempo = temposegundos();\n    let thoras = horas;\n    let tminutos = minutos;\n    let tsegundos = segundos;\n    const $selecionar = selecionar;\n    const intervalo = setInterval(() => {\n      const $id = selecionar.id;\n      const $name = selecionar.name;\n      const temporizar = () => {\n        if (tsegundos !== 0) {\n          tsegundos = tsegundos - 1;\n        } else if (tminutos !== 0) {\n          tminutos = tminutos - 1;\n          tsegundos = 59;\n        } else {\n          thoras = thoras - 1;\n          tminutos = 59;\n          tsegundos = 59;\n        }\n        tempo = tempo - 1;\n        return `${thoras.toString().length === 1 ? '0' + thoras : thoras}:${tminutos.toString().length === 1 ? '0' + tminutos : tminutos}:\n                ${tsegundos.toString().length === 1 ? '0' + tsegundos : tsegundos}`;\n      };\n      setSelecionar({\n        id: $id,\n        name: $name,\n        time: temporizar()\n      });\n      if (tempo === 0) {\n        clearInterval(intervalo);\n        setTarefas(tarefa => {\n          return tarefa.filter(obj => obj !== $selecionar);\n        });\n        alert('Tarefa Concluida');\n      }\n    }, 1000);\n  }\n  return {\n    temposegundos,\n    cronometrar\n  };\n};\n_s(useCronometro, \"C0L+hdEBRkbvuYA1UdXn0Jf5QBA=\");","map":{"version":3,"names":["useContext","SelecionarContext","TarefasContext","useCronometro","selecionar","setSelecionar","setTarefas","$horas","$minutos","$segundos","time","split","horas","parseInt","minutos","segundos","temposegundos","tempo","cronometrar","thoras","tminutos","tsegundos","$selecionar","intervalo","setInterval","$id","id","$name","name","temporizar","toString","length","clearInterval","tarefa","filter","obj","alert"],"sources":["C:/Users/Rafael/Documents/_Programação/_GitHub/Alura-Projetos/Alura-Studies/src/Common/Cronometro/cronometro.tsx"],"sourcesContent":["import { useContext } from 'react'\r\nimport { SelecionarContext } from \"../Selecionar\"\r\nimport { TarefasContext } from '../Tarefas';\r\n\r\nexport const useCronometro = (): { temposegundos: () => number, cronometrar: () => void } => {\r\n\r\n    const { selecionar, setSelecionar } = useContext(SelecionarContext);\r\n    const {setTarefas} = useContext(TarefasContext);\r\n\r\n    const [$horas, $minutos, $segundos]: string[] = selecionar.time.split(':');\r\n    const horas = parseInt($horas); const minutos = parseInt($minutos); const segundos = parseInt($segundos);\r\n\r\n    function temposegundos(): number {\r\n        const tempo: number = horas * 3600 + minutos * 60 + segundos;\r\n        return tempo;\r\n    }\r\n\r\n    function cronometrar() {\r\n        let tempo = temposegundos();\r\n        let thoras = horas;\r\n        let tminutos = minutos;\r\n        let tsegundos = segundos;\r\n\r\n        const $selecionar = selecionar;\r\n\r\n        const intervalo = setInterval(() => {\r\n            const $id = selecionar.id\r\n            const $name = selecionar.name\r\n            const temporizar = (): string => {\r\n\r\n                if (tsegundos !== 0) {\r\n                    tsegundos = tsegundos - 1;\r\n                } else if (tminutos !== 0) {\r\n                    tminutos = tminutos - 1;\r\n                    tsegundos = 59;\r\n                } else {\r\n                    thoras = thoras - 1;\r\n                    tminutos = 59;\r\n                    tsegundos = 59;\r\n                }\r\n\r\n                tempo = tempo - 1\r\n\r\n                return `${thoras.toString().length === 1 ? '0' + thoras : thoras}:${tminutos.toString().length === 1 ? '0' + tminutos : tminutos}:\r\n                ${tsegundos.toString().length === 1 ? '0' + tsegundos : tsegundos}`\r\n            }\r\n\r\n            setSelecionar({ id: $id, name: $name, time: temporizar() })\r\n\r\n            if (tempo === 0) {\r\n                clearInterval(intervalo)\r\n                setTarefas(tarefa => {\r\n                    return tarefa.filter(obj => obj !== $selecionar)\r\n                })\r\n                alert('Tarefa Concluida')\r\n            }\r\n\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    return { temposegundos, cronometrar }\r\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,iBAAiB,QAAQ,eAAe;AACjD,SAASC,cAAc,QAAQ,YAAY;AAE3C,OAAO,MAAMC,aAAa,GAAG,MAAgE;EAAA;EAEzF,MAAM;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGL,UAAU,CAACC,iBAAiB,CAAC;EACnE,MAAM;IAACK;EAAU,CAAC,GAAGN,UAAU,CAACE,cAAc,CAAC;EAE/C,MAAM,CAACK,MAAM,EAAEC,QAAQ,EAAEC,SAAS,CAAW,GAAGL,UAAU,CAACM,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EAC1E,MAAMC,KAAK,GAAGC,QAAQ,CAACN,MAAM,CAAC;EAAE,MAAMO,OAAO,GAAGD,QAAQ,CAACL,QAAQ,CAAC;EAAE,MAAMO,QAAQ,GAAGF,QAAQ,CAACJ,SAAS,CAAC;EAExG,SAASO,aAAa,GAAW;IAC7B,MAAMC,KAAa,GAAGL,KAAK,GAAG,IAAI,GAAGE,OAAO,GAAG,EAAE,GAAGC,QAAQ;IAC5D,OAAOE,KAAK;EAChB;EAEA,SAASC,WAAW,GAAG;IACnB,IAAID,KAAK,GAAGD,aAAa,EAAE;IAC3B,IAAIG,MAAM,GAAGP,KAAK;IAClB,IAAIQ,QAAQ,GAAGN,OAAO;IACtB,IAAIO,SAAS,GAAGN,QAAQ;IAExB,MAAMO,WAAW,GAAGlB,UAAU;IAE9B,MAAMmB,SAAS,GAAGC,WAAW,CAAC,MAAM;MAChC,MAAMC,GAAG,GAAGrB,UAAU,CAACsB,EAAE;MACzB,MAAMC,KAAK,GAAGvB,UAAU,CAACwB,IAAI;MAC7B,MAAMC,UAAU,GAAG,MAAc;QAE7B,IAAIR,SAAS,KAAK,CAAC,EAAE;UACjBA,SAAS,GAAGA,SAAS,GAAG,CAAC;QAC7B,CAAC,MAAM,IAAID,QAAQ,KAAK,CAAC,EAAE;UACvBA,QAAQ,GAAGA,QAAQ,GAAG,CAAC;UACvBC,SAAS,GAAG,EAAE;QAClB,CAAC,MAAM;UACHF,MAAM,GAAGA,MAAM,GAAG,CAAC;UACnBC,QAAQ,GAAG,EAAE;UACbC,SAAS,GAAG,EAAE;QAClB;QAEAJ,KAAK,GAAGA,KAAK,GAAG,CAAC;QAEjB,OAAQ,GAAEE,MAAM,CAACW,QAAQ,EAAE,CAACC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGZ,MAAM,GAAGA,MAAO,IAAGC,QAAQ,CAACU,QAAQ,EAAE,CAACC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGX,QAAQ,GAAGA,QAAS;AACjJ,kBAAkBC,SAAS,CAACS,QAAQ,EAAE,CAACC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGV,SAAS,GAAGA,SAAU,EAAC;MACvE,CAAC;MAEDhB,aAAa,CAAC;QAAEqB,EAAE,EAAED,GAAG;QAAEG,IAAI,EAAED,KAAK;QAAEjB,IAAI,EAAEmB,UAAU;MAAG,CAAC,CAAC;MAE3D,IAAIZ,KAAK,KAAK,CAAC,EAAE;QACbe,aAAa,CAACT,SAAS,CAAC;QACxBjB,UAAU,CAAC2B,MAAM,IAAI;UACjB,OAAOA,MAAM,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKb,WAAW,CAAC;QACpD,CAAC,CAAC;QACFc,KAAK,CAAC,kBAAkB,CAAC;MAC7B;IAEJ,CAAC,EAAE,IAAI,CAAC;EAEZ;EAEA,OAAO;IAAEpB,aAAa;IAAEE;EAAY,CAAC;AACzC,CAAC;AAAA,GA1DYf,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}