{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Documents\\\\_Programa\\xE7\\xE3o\\\\_GitHub\\\\Alura-Projetos\\\\Alura-Studies\\\\src\\\\Common\\\\Formulario\\\\index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputValueContext = /*#__PURE__*/createContext({\n  inputvalue: [],\n  setInputvalue: () => {}\n});\nexport const InputValueProvider = props => {\n  _s();\n  const [inputvalue, setInputvalue] = useState([]);\n\n  /* Output do InputValueProvider */\n  return /*#__PURE__*/_jsxDEV(InputValueContext.Provider, {\n    value: {\n      inputvalue,\n      setInputvalue\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(InputValueProvider, \"NfeWYxArhwxPgwADr9pSOiLQ8Ac=\");\n_c = InputValueProvider;\nexport const useInputChange = () => {\n  _s2();\n  const {\n    setInputvalue\n  } = useContext(InputValueContext);\n  function mudar(id, value) {\n    setInputvalue(prevValue => {\n      if (prevValue.filter(obj => {\n        return obj.id === id;\n      }).length) {\n        return prevValue.map(valor => {\n          if (valor.id === id) {\n            valor.value = value;\n          }\n          return valor;\n        });\n      } else {\n        return [...prevValue, {\n          id: id,\n          value: value\n        }];\n      }\n    });\n  }\n  return {\n    mudar\n  };\n};\n_s2(useInputChange, \"jpcytYCLKlts2GmuyLzT2IPHBXw=\");\nvar _c;\n$RefreshReg$(_c, \"InputValueProvider\");","map":{"version":3,"names":["useState","createContext","useContext","InputValueContext","inputvalue","setInputvalue","InputValueProvider","props","children","useInputChange","mudar","id","value","prevValue","filter","obj","length","map","valor"],"sources":["C:/Users/Rafael/Documents/_Programação/_GitHub/Alura-Projetos/Alura-Studies/src/Common/Formulario/index.tsx"],"sourcesContent":["import {useState, createContext, SetStateAction, useContext} from 'react'\r\nimport { Input } from '../../Types/Input';\r\n\r\n// inputvalue guardará os valores do input do formulario em um array de objetos, onde cada objeto é referente à um input e contém as propriedades id e value.\r\n\r\ntype InputContext = {\r\n    inputvalue: Input[];\r\n    setInputvalue: React.Dispatch<SetStateAction<Input[]>>\r\n}\r\n\r\nexport const InputValueContext = createContext<InputContext>({\r\n    inputvalue: [],\r\n    setInputvalue: () => {}\r\n});\r\n\r\nexport const InputValueProvider = (props: {children: React.ReactNode}) => {\r\n    \r\n    const [inputvalue, setInputvalue] = useState<Input[]>([]);\r\n\r\n    /* Output do InputValueProvider */\r\n    return (\r\n        <InputValueContext.Provider value={{inputvalue, setInputvalue}}>\r\n            {props.children}\r\n        </InputValueContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useInputChange = (): {mudar: (id: number, value: string) => void} => {\r\n    \r\n    const {setInputvalue} = useContext(InputValueContext);\r\n\r\n    function mudar(id: number, value: string): void {\r\n\r\n        setInputvalue(prevValue => {\r\n            if((prevValue.filter(obj => {return obj.id === id})).length) {\r\n                return prevValue.map(valor => {\r\n                    if (valor.id === id) {\r\n                        valor.value = value;\r\n                    }\r\n                    return valor;\r\n                })\r\n            } else {\r\n                return [...prevValue, {id: id, value: value}]\r\n            }\r\n        });\r\n    }\r\n\r\n    return {mudar}\r\n\r\n\r\n}"],"mappings":";;;AAAA,SAAQA,QAAQ,EAAEC,aAAa,EAAkBC,UAAU,QAAO,OAAO;AAAA;AAUzE,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAe;EACzDG,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE,MAAM,CAAC;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAIC,KAAkC,IAAK;EAAA;EAEtE,MAAM,CAACH,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAU,EAAE,CAAC;;EAEzD;EACA,oBACI,QAAC,iBAAiB,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACI,UAAU;MAAEC;IAAa,CAAE;IAAA,UAC1DE,KAAK,CAACC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAErC,CAAC;AAAA,GAVYF,kBAAkB;AAAA,KAAlBA,kBAAkB;AAY/B,OAAO,MAAMG,cAAc,GAAG,MAAoD;EAAA;EAE9E,MAAM;IAACJ;EAAa,CAAC,GAAGH,UAAU,CAACC,iBAAiB,CAAC;EAErD,SAASO,KAAK,CAACC,EAAU,EAAEC,KAAa,EAAQ;IAE5CP,aAAa,CAACQ,SAAS,IAAI;MACvB,IAAIA,SAAS,CAACC,MAAM,CAACC,GAAG,IAAI;QAAC,OAAOA,GAAG,CAACJ,EAAE,KAAKA,EAAE;MAAA,CAAC,CAAC,CAAEK,MAAM,EAAE;QACzD,OAAOH,SAAS,CAACI,GAAG,CAACC,KAAK,IAAI;UAC1B,IAAIA,KAAK,CAACP,EAAE,KAAKA,EAAE,EAAE;YACjBO,KAAK,CAACN,KAAK,GAAGA,KAAK;UACvB;UACA,OAAOM,KAAK;QAChB,CAAC,CAAC;MACN,CAAC,MAAM;QACH,OAAO,CAAC,GAAGL,SAAS,EAAE;UAACF,EAAE,EAAEA,EAAE;UAAEC,KAAK,EAAEA;QAAK,CAAC,CAAC;MACjD;IACJ,CAAC,CAAC;EACN;EAEA,OAAO;IAACF;EAAK,CAAC;AAGlB,CAAC;AAAA,IAvBYD,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}