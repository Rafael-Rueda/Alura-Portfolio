{"ast":null,"code":"import _slicedToArray from\"C:/Users/Rafael/Documents/_Programa\\xE7\\xE3o/_GitHub/Alura-Projetos/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var TarefasContext=/*#__PURE__*/createContext({tarefas:[],setTarefas:function setTarefas(){}});export var TarefasProvider=function TarefasProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tarefas=_useState2[0],setTarefas=_useState2[1];return/*#__PURE__*/_jsx(TarefasContext.Provider,{value:{tarefas:tarefas,setTarefas:setTarefas},children:children});};","map":{"version":3,"names":["createContext","useState","TarefasContext","tarefas","setTarefas","TarefasProvider","children"],"sources":["C:/Users/Rafael/Documents/_Programação/_GitHub/Alura-Projetos/src/Common/Tarefas/index.tsx"],"sourcesContent":["import {createContext, useState, SetStateAction} from 'react';\r\nimport { Tarefa } from '../../Types/Tarefa';\r\n\r\n// Tarefas será um array que conterá objetos contendo as propriedades name, id, e time.\r\n\r\ntype TarefaContext = {\r\n    tarefas: Tarefa[];\r\n    setTarefas: React.Dispatch<SetStateAction<Tarefa[]>>\r\n}\r\n\r\n\r\n\r\nexport const TarefasContext = createContext<TarefaContext>({\r\n    tarefas: [],\r\n    setTarefas: () => {}\r\n});\r\n\r\n\r\nexport const TarefasProvider = ({children}: {children: React.ReactNode}) => {\r\n    const [tarefas, setTarefas] = useState<Tarefa[]>([])\r\n    \r\n    return (\r\n        <TarefasContext.Provider value={{tarefas, setTarefas}}>\r\n            {children}\r\n        </TarefasContext.Provider>\r\n    )\r\n}\r\n"],"mappings":"yJAAA,OAAQA,aAAa,CAAEC,QAAQ,KAAuB,OAAO,CAAC,2CAY9D,MAAO,IAAMC,eAAc,cAAGF,aAAa,CAAgB,CACvDG,OAAO,CAAE,EAAE,CACXC,UAAU,CAAE,qBAAM,CAAC,CACvB,CAAC,CAAC,CAGF,MAAO,IAAMC,gBAAe,CAAG,QAAlBA,gBAAe,MAAgD,IAA3CC,SAAQ,MAARA,QAAQ,CACrC,cAA8BL,QAAQ,CAAW,EAAE,CAAC,wCAA7CE,OAAO,eAAEC,UAAU,eAE1B,mBACI,KAAC,cAAc,CAAC,QAAQ,EAAC,KAAK,CAAE,CAACD,OAAO,CAAPA,OAAO,CAAEC,UAAU,CAAVA,UAAU,CAAE,UACjDE,QAAQ,EACa,CAElC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}