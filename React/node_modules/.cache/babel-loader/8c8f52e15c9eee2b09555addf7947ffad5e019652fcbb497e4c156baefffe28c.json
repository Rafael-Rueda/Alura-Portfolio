{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { SelecionarContext } from \"../Selecionar\";\nexport const useCronometro = () => {\n  _s();\n  const {\n    selecionar,\n    setSelecionar\n  } = useContext(SelecionarContext);\n  const [$horas, $minutos, $segundos] = selecionar.time.split(':');\n  const horas = parseInt($horas);\n  const minutos = parseInt($minutos);\n  const segundos = parseInt($segundos);\n  function temposegundos() {\n    const tempo = horas + minutos + segundos;\n    return tempo;\n  }\n  function cronometrar() {\n    let tempo = temposegundos();\n    setInterval(() => {\n      const $id = selecionar.id;\n      const $name = selecionar.name;\n      const temporizar = () => {\n        let thoras = horas;\n        let tminutos = minutos;\n        let tsegundos = segundos;\n        if (segundos !== 0) {\n          tsegundos = tsegundos - 1;\n        } else if (minutos !== 0) {\n          tminutos = tminutos - 1;\n        } else {\n          thoras = thoras - 1;\n        }\n        tempo = tempo - 1;\n        return `${thoras}:${tminutos}:${tsegundos}`;\n      };\n      setSelecionar({\n        id: $id,\n        name: $name,\n        time: temporizar()\n      });\n\n      // if (tempo === 0) {\n      //     clearInterval(intervalo)\n      // }\n    }, 1000);\n  }\n  return {\n    temposegundos,\n    cronometrar\n  };\n};\n_s(useCronometro, \"u6x0U/nxzrP456bEKG9Lk2p5cBc=\");","map":{"version":3,"names":["useContext","SelecionarContext","useCronometro","selecionar","setSelecionar","$horas","$minutos","$segundos","time","split","horas","parseInt","minutos","segundos","temposegundos","tempo","cronometrar","setInterval","$id","id","$name","name","temporizar","thoras","tminutos","tsegundos"],"sources":["C:/Users/Rafael/Documents/_Programação/_GitHub/Alura-Projetos/Alura-Studies/src/Common/Cronometro/cronometro.tsx"],"sourcesContent":["import {  useContext } from 'react'\r\nimport { SelecionarContext } from \"../Selecionar\"\r\n\r\nexport const useCronometro = (): {temposegundos: () => number, cronometrar: () => void} => {\r\n    \r\n    const {selecionar, setSelecionar} = useContext(SelecionarContext)\r\n    const [$horas, $minutos, $segundos]: string[] = selecionar.time.split(':');\r\n    const horas = parseInt($horas); const minutos = parseInt($minutos); const segundos = parseInt($segundos);\r\n\r\n    function temposegundos(): number {\r\n        const tempo: number =  horas + minutos + segundos;\r\n        return tempo;\r\n    }\r\n\r\n    function cronometrar() {\r\n        let tempo = temposegundos();\r\n        setInterval(() => {\r\n            const $id = selecionar.id\r\n            const $name = selecionar.name\r\n            const temporizar = (): string => {\r\n                let thoras = horas;\r\n                let tminutos = minutos;\r\n                let tsegundos = segundos;\r\n                if (segundos !== 0) {\r\n                    tsegundos = tsegundos - 1;\r\n                } else if(minutos !== 0) {\r\n                    tminutos = tminutos - 1;\r\n                } else {\r\n                    thoras = thoras - 1;\r\n                }\r\n\r\n                tempo = tempo - 1\r\n\r\n                return `${thoras}:${tminutos}:${tsegundos}`\r\n            }\r\n \r\n            setSelecionar({id: $id, name: $name, time: temporizar()})\r\n\r\n            // if (tempo === 0) {\r\n            //     clearInterval(intervalo)\r\n            // }\r\n\r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    return {temposegundos, cronometrar}\r\n}"],"mappings":";AAAA,SAAUA,UAAU,QAAQ,OAAO;AACnC,SAASC,iBAAiB,QAAQ,eAAe;AAEjD,OAAO,MAAMC,aAAa,GAAG,MAA8D;EAAA;EAEvF,MAAM;IAACC,UAAU;IAAEC;EAAa,CAAC,GAAGJ,UAAU,CAACC,iBAAiB,CAAC;EACjE,MAAM,CAACI,MAAM,EAAEC,QAAQ,EAAEC,SAAS,CAAW,GAAGJ,UAAU,CAACK,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EAC1E,MAAMC,KAAK,GAAGC,QAAQ,CAACN,MAAM,CAAC;EAAE,MAAMO,OAAO,GAAGD,QAAQ,CAACL,QAAQ,CAAC;EAAE,MAAMO,QAAQ,GAAGF,QAAQ,CAACJ,SAAS,CAAC;EAExG,SAASO,aAAa,GAAW;IAC7B,MAAMC,KAAa,GAAIL,KAAK,GAAGE,OAAO,GAAGC,QAAQ;IACjD,OAAOE,KAAK;EAChB;EAEA,SAASC,WAAW,GAAG;IACnB,IAAID,KAAK,GAAGD,aAAa,EAAE;IAC3BG,WAAW,CAAC,MAAM;MACd,MAAMC,GAAG,GAAGf,UAAU,CAACgB,EAAE;MACzB,MAAMC,KAAK,GAAGjB,UAAU,CAACkB,IAAI;MAC7B,MAAMC,UAAU,GAAG,MAAc;QAC7B,IAAIC,MAAM,GAAGb,KAAK;QAClB,IAAIc,QAAQ,GAAGZ,OAAO;QACtB,IAAIa,SAAS,GAAGZ,QAAQ;QACxB,IAAIA,QAAQ,KAAK,CAAC,EAAE;UAChBY,SAAS,GAAGA,SAAS,GAAG,CAAC;QAC7B,CAAC,MAAM,IAAGb,OAAO,KAAK,CAAC,EAAE;UACrBY,QAAQ,GAAGA,QAAQ,GAAG,CAAC;QAC3B,CAAC,MAAM;UACHD,MAAM,GAAGA,MAAM,GAAG,CAAC;QACvB;QAEAR,KAAK,GAAGA,KAAK,GAAG,CAAC;QAEjB,OAAQ,GAAEQ,MAAO,IAAGC,QAAS,IAAGC,SAAU,EAAC;MAC/C,CAAC;MAEDrB,aAAa,CAAC;QAACe,EAAE,EAAED,GAAG;QAAEG,IAAI,EAAED,KAAK;QAAEZ,IAAI,EAAEc,UAAU;MAAE,CAAC,CAAC;;MAEzD;MACA;MACA;IAEJ,CAAC,EAAE,IAAI,CAAC;EAEZ;EAEA,OAAO;IAACR,aAAa;IAAEE;EAAW,CAAC;AACvC,CAAC;AAAA,GA5CYd,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}